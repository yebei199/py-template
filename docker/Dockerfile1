# syntax=docker/dockerfile:1
# 保留上面这个注释以使用 Docker BuildKit

################################
# PYTHON-BASE
# 准备好所有构建和运行时的环境变量，替换国内软件源。
################################
FROM python:3.13-slim AS python-base

# 替换为阿里云的 Debian 软件源
RUN echo "deb http://mirrors.aliyun.com/debian/ buster main non-free contrib" > /etc/apt/sources.list \
   && echo "deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib" >> /etc/apt/sources.list \
   && echo "deb http://mirrors.aliyun.com/debian-security buster/updates main" >> /etc/apt/sources.list \
   && echo "deb-src http://mirrors.aliyun.com/debian-security buster/updates main" >> /etc/apt/sources.list \
   && echo "deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib" >> /etc/apt/sources.list \
   && echo "deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib" >> /etc/apt/sources.list

# 更改pip源（如果需要）
RUN pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/

# 更新 apt-get 源并安装 curl
RUN apt-get update && \
    apt-get install -y curl

# 安装 uv 工具并验证安装
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    uv --version

# 清理缓存
RUN rm -rf /var/lib/apt/lists/*

################################
# BUILDER-BASE
# 安装和编译依赖
################################
FROM python-base AS development

WORKDIR /app
COPY . ./

# 使用 uv 同步依赖
RUN uv sync

# 设置时区
ENV TZ=Asia/Shanghai
